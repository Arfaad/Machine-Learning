import pandas as pd
import numpy as np
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns

# Step 1: Load the dataset (example dataset)
data = {
    "Store": ["Store1", "Store2", "Store3", "Store4", "Store5"],
    "Total_Sales": [1000, 1500, 1200, 800, 1300],
    "Customer_Count": [200, 300, 250, 150, 280],
    "Satisfaction_Score": [4.5, 4.0, 4.8, 3.5, 4.2]
}

df = pd.DataFrame(data)

# Step 2: Select features for clustering
features = df[["Total_Sales", "Customer_Count", "Satisfaction_Score"]]

# Step 3: Standardize the features
scaler = StandardScaler()
scaled_features = scaler.fit_transform(features)

# Step 4: Apply K-Means clustering
kmeans = KMeans(n_clusters=2, random_state=42)
df['Cluster'] = kmeans.fit_predict(scaled_features)

# Step 5: Visualize the results
plt.figure(figsize=(8, 6))
sns.scatterplot(
    x=df['Total_Sales'], 
    y=df['Customer_Count'], 
    hue=df['Cluster'], 
    palette='Set2', 
    s=100
)
plt.title("K-Means Clustering of Store Performance")
plt.xlabel("Total Sales")
plt.ylabel("Customer Count")
plt.legend(title="Cluster")
plt.show()

# Step 6: Output cluster assignments
print(df)
